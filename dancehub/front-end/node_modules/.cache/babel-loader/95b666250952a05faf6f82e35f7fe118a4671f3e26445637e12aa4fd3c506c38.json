{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nconst StickyHeader = () => {\n  _s();\n  const [isSticky, setIsSticky] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsSticky(window.scrollY > 0);\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n};\n_s(StickyHeader, \"i8qBv7+w1xo/aojUVt4YquRar/k=\");\n_c = StickyHeader;\nexport default StickyHeader;\nvar _c;\n$RefreshReg$(_c, \"StickyHeader\");","map":{"version":3,"names":["React","useState","useEffect","StickyHeader","_s","isSticky","setIsSticky","handleScroll","window","scrollY","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["/Users/mac16/Desktop/Demo App/empire/src/drop-down.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\"; \n\nconst StickyHeader = () => {\n    const [isSticky, setIsSticky] = useState(false);\n  \n    useEffect(() => {\n      const handleScroll = () => {\n        setIsSticky(window.scrollY > 0);\n      };\n  \n      window.addEventListener('scroll', handleScroll);\n  \n      // Cleanup the event listener on component unmount\n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    }, []);\n  };\nexport default StickyHeader;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMK,YAAY,GAAGA,CAAA,KAAM;MACzBD,WAAW,CAACE,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC;IACjC,CAAC;IAEDD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACH,EAAA,CAfED,YAAY;AAAAS,EAAA,GAAZT,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}